{"version":3,"file":"configure-BfLLW6GY.js","sources":["../src/-private/new-core-tmp/reactivity/configure.ts"],"sourcesContent":["import { deprecate } from '@ember/debug';\n\nimport { dependencySatisfies, importSync, macroCondition } from '@embroider/macros';\n\nimport { DEPRECATE_TRACKING_PACKAGE } from '@warp-drive/build-config/deprecations';\nimport { assert } from '@warp-drive/build-config/macros';\nimport { getOrSetGlobal, peekTransient, setTransient } from '@warp-drive/core-types/-private';\n\nexport const ARRAY_SIGNAL = getOrSetGlobal('#[]', Symbol('#[]'));\nexport const OBJECT_SIGNAL = getOrSetGlobal('#{}', Symbol('#{}'));\n\n/**\n * Requirements:\n *\n * Signal:\n *\n * - signal: a way of creating a reference that we can dirty when we desire to notify\n *         - @signal: a way of creating an accessor on an object that subscribes to a signal on access\n *                    and notifies the signal on set, or of upgrading a descriptor to be such an accessor\n *         - defineSignal: a way of creating a signal on an object\n *         - notifySignal: a way of notifying the underlying signal that it has been dirtied\n *         - peekSignal: a way of inspecting the signal without notifying it\n *\n *  - gate: a memoized getter function that re-runs when on access if its signal is dirty\n *          conceptually, a gate is a tightly coupled signal and memo\n *         - @gate: a way of creating a gate on an object or upgrading a descriptor with a getter\n *                  to be a gate\n *         - defineGate: a way of creating a gate on an object\n *         - notifySignal: a way of notifying the signal for a gate that it has been dirtied\n *\n * - memo:\n *        - @memo: a way of creating a memoized getter on an object or upgrading a descriptor with a getter\n *                 to be a memo\n *        - defineMemo: a way of creating a memo on an object\n *\n * - signalStore: storage bucket for signals associated to an object\n *        - withSignalStore: a way of pre-creating a signal store on an object\n *\n *\n * @internal\n */\n\n/**\n * An Opaque type that represents a framework specific or TC39 signal.\n *\n * It may be an array of signals or a single signal.\n *\n * @internal\n */\nexport type SignalRef = unknown;\n/**\n * The hooks which MUST be configured in order to use this library,\n * either for framework specfic signals or TC39 signals.\n *\n * Support for multiple frameworks simultaneously can be done via\n * this abstraction by returning multiple signals from the `createSignal`\n * method, and consuming the correct one via the correct framework via\n * the `consumeSignal` and `notifySignal` methods.\n *\n * @typedoc\n */\nexport interface SignalHooks<T = SignalRef> {\n  createSignal: (obj: object, key: string | symbol) => T;\n  consumeSignal: (signal: T) => void;\n  notifySignal: (signal: T) => void;\n  createMemo: <F>(obj: object, key: string | symbol, fn: () => F) => () => F;\n  willSyncFlushWatchers: () => boolean;\n}\n\nexport interface HooksOptions {\n  wellknown: {\n    Array: symbol | string;\n  };\n}\n\n/**\n * The public API for configuring the signal hooks.\n *\n * @internal\n */\nexport function setupSignals<T>(buildConfig: (options: HooksOptions) => SignalHooks<T>) {\n  // We want to assert this but can't because too many package manager\n  // and bundler bugs exist that cause this to be called multiple times\n  // for what should be a single call.\n  // assert(`Cannot override configured signal hooks`, peekTransient('signalHooks') === null);\n  const hooks = buildConfig({\n    wellknown: {\n      Array: ARRAY_SIGNAL,\n    },\n  });\n  setTransient('signalHooks', hooks);\n}\n\n/**\n * Internal method for consuming the configured `createSignal` hook\n *\n * @internal\n */\nexport function createSignal(obj: object, key: string | symbol): SignalRef {\n  const signalHooks: SignalHooks | null = peekTransient('signalHooks');\n  assert(`Signal hooks not configured`, signalHooks);\n  return signalHooks.createSignal(obj, key);\n}\n\n/**\n * Internal method for consuming the configured `consumeSignal` hook\n *\n * @internal\n */\nexport function consumeSignal(signal: SignalRef) {\n  const signalHooks: SignalHooks | null = peekTransient('signalHooks');\n\n  assert(`Signal hooks not configured`, signalHooks);\n  return signalHooks.consumeSignal(signal);\n}\n\n/**\n * Internal method for consuming the configured `notifySignal` hook\n *\n * @internal\n */\nexport function notifySignal(signal: SignalRef) {\n  const signalHooks: SignalHooks | null = peekTransient('signalHooks');\n  assert(`Signal hooks not configured`, signalHooks);\n  return signalHooks.notifySignal(signal);\n}\n\nexport function createMemo<T>(object: object, key: string | symbol, fn: () => T): () => T {\n  const signalHooks: SignalHooks | null = peekTransient('signalHooks');\n  assert(`Signal hooks not configured`, signalHooks);\n  return signalHooks.createMemo(object, key, fn);\n}\n\nexport function willSyncFlushWatchers(): boolean {\n  const signalHooks: SignalHooks | null = peekTransient('signalHooks');\n  assert(`Signal hooks not configured`, signalHooks);\n  return signalHooks.willSyncFlushWatchers();\n}\n\nif (DEPRECATE_TRACKING_PACKAGE) {\n  let hasEmberDataTracking = false;\n  if (macroCondition(dependencySatisfies('@ember-data/tracking', '*'))) {\n    hasEmberDataTracking = true;\n    // @ts-expect-error\n    const { buildSignalConfig } = importSync('@ember-data/tracking');\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    setupSignals(buildSignalConfig);\n  }\n\n  const message = [\n    `Using WarpDrive with EmberJS requires configuring it to use Ember's reactivity system.`,\n    `Previously this was provided by installing the package '@ember-data/tracking', but this package is now deprecated.`,\n    ``,\n    `To resolve this deprecation, follow these steps:`,\n    hasEmberDataTracking\n      ? `- remove \"@ember-data/tracking\" and (if needed) \"@ember-data-types/tracking\" from your project in both your package.json and tsconfig.json`\n      : false,\n    `- add \"@warp-drive/ember\" to your project in both your package.json and tsconfig.json`,\n    '- add the following import to your app.js file:',\n    '',\n    '\\t```',\n    `\\timport '@warp-drive/ember/install';`,\n    '\\t```',\n    ``,\n    '- mark this deprecation as resolved in your project by adding the following to your WarpDrive config in ember-cli-build.js:',\n    '',\n    '\\t```',\n    '\\tconst { setConfig } = await import(\"@warp-drive/build-config\");',\n    '\\tsetConfig(app, __dirname, {',\n    '\\t  deprecations: {',\n    '\\t    DEPRECATE_TRACKING_PACKAGE: false,',\n    '\\t  },',\n    '\\t});',\n    '\\t```',\n    ``,\n    `For more information, see the Package Unification RFC: https://rfcs.emberjs.com/id/1075-warp-drive-package-unification/`,\n  ]\n    .filter((l) => l !== false)\n    .join('\\n');\n\n  deprecate(message, false, {\n    id: 'warp-drive.deprecate-tracking-package',\n    until: '6.0.0',\n    for: 'warp-drive',\n    since: {\n      enabled: '5.3.4',\n      available: '4.13',\n    },\n    url: 'https://deprecations.emberjs.com/id/warp-drive.deprecate-tracking-package',\n  });\n}\n"],"names":["ARRAY_SIGNAL","getOrSetGlobal","Symbol","OBJECT_SIGNAL","setupSignals","buildConfig","hooks","wellknown","Array","setTransient","createSignal","obj","key","signalHooks","peekTransient","macroCondition","getGlobalConfig","WarpDrive","env","DEBUG","test","Error","consumeSignal","signal","notifySignal","createMemo","object","fn","willSyncFlushWatchers","deprecations","DEPRECATE_TRACKING_PACKAGE","hasEmberDataTracking","dependencySatisfies","buildSignalConfig","importSync","message","filter","l","join","deprecate","id","until","for","since","enabled","available","url"],"mappings":"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"}